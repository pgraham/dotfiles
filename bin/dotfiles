#!/usr/bin/env bash

echo "Dotfiles setup - Adapted from script of the same name by Ben Alman"

if [[ "$1" == "-h" || "$1" == "--help" ]]; then cat <<HELP

Usage: $(basename "$0")

See the README for documentation
https://github.com/pgraham/dotfiles

Copyright (c) 2013 Philip Graham
Licensed under the 3-clause BSD license.
https://gihub.com/pgraham/dotfiles/blob/master/LICENSE
HELP
exit; fi

##########

function log_error()   { echo -e " \e[31m✖\e[0m $@"; }
function log_info()    { echo -e " \e[39m➜\e[0m $@"; }
function log_success() { echo -e " \e[32m✔\e[0m $@"; }

function link_files() {
  local base dest
  local files=(~/.dotfiles/link/*)

  for file in "${files[@]}"; do

    if [[ $file = *.un~ ]]; then
      continue
    fi

    base="$(basename $file)"
    dest="$HOME/$base"

    if [[ "$file" -ef "$dest" ]]; then
      log_info "Skipping $file, same file"
      continue
    fi

    if [[ -e "$dest" ]]; then
      backup "$dest"
      log_info "Backing up $dest"
    fi

    log_success "Linking ~/$base"
    ln -sf ${file#$HOME/} ~/
  done
}

function link_bin() {
  local base dest
  local files=(~/.dotfiles/bin/*)

  log_info "Linking /bin files"
  for file in "${files[@]}"; do

    if [[ $file = *.un~ ]]; then
      continue
    fi

    base="$(basename $file)"
    dest="$HOME/bin/$base"

    if [[ "$file" -ef "$dest" ]]; then
      log_info "Skipping $file, same file"
      continue
    fi

    if [[ -e "$dest" ]]; then
      backup "$dest"
      log_info "Backing up $dest"
    fi

    log_success "Linking ~/bin/$base"
    ln -sf "$file" ~/bin/
  done
}

backup_dir="$HOME/.dotfiles/backups/$(date "+%Y_%m_%d-%H_%M_%S")/"
function backup() {
  [[ -e "$backup_dir" ]] || mkdir -p "$backup_dir"

  mv "$1" "$backup_dir"
}

shopt -s dotglob
shopt -s nullglob

# If Git is not installed install it
if [[ ! "$(type -P git)" ]]; then

  if [[ ! "$(cat /etc/issue 2> /dev/null)" =~ Ubuntu ]]; then
    log_error "Unable to install Git. Please install manually and try again."
    exit 1
  fi

  log_info "Installing Git."
  sudo apt-get -qq install git

  if [[ ! "$(type -P git)" ]]; then
    log_error "Git should be installed. It isn't. Aborting."
    exit 1
  else
    log_success "Git installed."
  fi

  # Configure git
  log_info "Configuring git."
  git config --global color.ui auto
  git config --global user.email "philip.robert.graham@gmail.com"
  git config --global user.name "Philip Graham"
fi

# If repository isn't cloned yet do it!
if [[ ! -d ~/.dotfiles ]]; then
  log_info "Downloading dotfiles"
  git clone --recursive git://github.com/pgraham/dotfiles.git ~/.dotfiles
  cd ~/.dotfiles
else
  log_info "Updating dotfiles"
  cd ~/.dotfiles
  git pull
  git submodule update --init --recursive --quiet
fi

link_bin
link_files

# Create dump for Vim undo files if it doesn't already exist
if [[ ! -d ~/.vim/undo ]]; then
  mkdir ~/.vim/undo
fi
